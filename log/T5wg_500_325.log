-------------------- Asymptotic --------------------
/bin/sh: unsetenv: command not found
/bin/sh: setenv: command not found
/bin/sh: setenv: command not found
/bin/sh: setenv: command not found
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> Using OpenSSL to get a really random seed 
>>> Used OpenSSL to get a really random seed -258272313
Computing limit starting from observation
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
[#0] ERROR:Eval -- RooAbsReal::logEvalError(model_s) evaluation error, 
 origin       : RooProdPdf::model_s[ modelObs_s * nuisancePdf ]
 message      : getLogVal() top-level p.d.f evaluates to zero
 server values: !pdfs=(modelObs_s = 0/1,nuisancePdf = 0.999954)
[#0] ERROR:Eval -- RooAbsReal::logEvalError(nuisancePdf) evaluation error, 
 origin       : RooProdPdf::nuisancePdf[ effscale_Pdf * ewkxsec_Pdf * lumi_Pdf * vgscale_Electron_Pdf ]
 message      : getLogVal() top-level p.d.f evaluates to zero
 server values: !pdfs=(effscale_Pdf = nan/2.50663,ewkxsec_Pdf = nan/2.50663,lumi_Pdf = nan/2.50663,vgscale_Electron_Pdf = nan/2.50663)
[#0] ERROR:Eval -- RooAbsReal::logEvalError(nuisancePdf) evaluation error, 
 origin       : RooProdPdf::nuisancePdf[ effscale_Pdf * ewkxsec_Pdf * lumi_Pdf * vgscale_Electron_Pdf ]
 message      : getLogVal() top-level p.d.f evaluates to zero
 server values: !pdfs=(effscale_Pdf = nan/2.50663,ewkxsec_Pdf = nan/2.50663,lumi_Pdf = nan/2.50663,vgscale_Electron_Pdf = nan/2.50663)
Median for expected limits: 0.00537109
Sigma  for expected limits: 0.0027404

 -- Asymptotic -- 
Expected  2.5%: r < 0.0023
Expected 16.0%: r < 0.0035
Expected 50.0%: r < 0.0054
Expected 84.0%: r < 0.0085
Expected 97.5%: r < 0.0119

Done in 0.00 min (cpu), 0.00 min (real)
